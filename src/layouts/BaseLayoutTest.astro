---
import Footer from "@components/Footer.astro";
import Nav from "@components/Nav.astro";
import { ViewTransitions } from 'astro:transitions';
import { languages } from "@data/siteData";
import { allTranslations } from "@data/siteData";
import Seo from "@components/Seo.astro";
import { Icon } from "astro-icon/components";
import { getEntries, type CollectionEntry } from "astro:content";
import Toc from "@components/Toc.astro";

const { pageData, pageTitle, socialImage, headings, type, ...rest  } = Astro.props.frontmatter || Astro.props;

// const pathArray = Astro.url.pathname.split('/');
// //const pageLang = pathArray[1] ? pathArray[1] : 'en';
// const htmlLang = languages.filter((lang) => pathArray.includes(lang.slug));

// const pageLang = htmlLang[0] ? htmlLang[0].lang : 'en';

const filteredTranslations = Object.fromEntries(
   Object.entries(allTranslations).filter(
      ([key, value]) => pageData.languageCode === key
   )
);

const translation = Object.values(filteredTranslations)[0];

const relatedPages = pageData.otherLanguages && await getEntries(pageData.otherLanguages);

// function getLanguage(langSlug: string) {
//   let defaultLang = 'en';
//   const langArray = langSlug.split('/');
//   if(langArray[0].length === 0) {
//     return defaultLang = 'en';
//   } else {
//     return defaultLang = langArray[0];
//   }
// }

function versionText(textObj: any, lang: string) {
	const textObjArr = Object.fromEntries(Object.entries(textObj).filter(([key]) => key.includes(lang)));
	const [text] = Object.keys(textObjArr);
	//console.log(textObjArr[text])
	return textObjArr[text];
}

const objArr = Object.fromEntries(Object.entries(translation.versionText).filter(([key]) => key.includes('es')));

const [prop] = Object.keys(objArr);

console.log(translation.versionText, pageData.languageCode);

---
<!DOCTYPE html>
<html class="scroll-smooth scroll-pt-24" lang=`${pageData.languageCode}`>
	

	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		
		<!-- SEO -->
		<Seo pageData={pageData} pageTitle={pageTitle} socialImage={socialImage} type={type} lang={pageData.languageCode} />
	
		<ViewTransitions />
		
	</head>
	
	<body class="min-h-[101vh] flex flex-col justify-between">
		
		
		<Nav translations={translation} pageLang={pageData.languageCode}/>
		
		<main class="my-6 md:my-12 p-4 mx-auto prose" >
			<!-- {entry.data.image && <BlockhausImage intent={entry.data.width} width={entry.data.image.width} height={entry.data.image.width} alt={entry.data.alt ? entry.data.alt : ''} src={entry.data.image} />} -->
			
		 <div>
			 
			 <h1 class="text-3xl">{pageData?.title}</h1>
			 
			 {headings && headings.length > 0 && <Toc headings={headings} translations={translation}/>}
			
			 <slot />
			
			 <div class="flex items-center rounded-md gap-6 mt-12 divide-x">
				
				<span class="text-xs uppercase">{translation.versions}</span>
				<div class="flex gap-4 px-6">
				
				{relatedPages && relatedPages.map((page: CollectionEntry<'pages'>) => <a title={`${versionText(translation.versionText, page.data.languageCode)}`} class="flex items-center justify-center bg-gray-100 rounded-full h-12 w-12 items-center gap-1 outline-2 outline-offset-2 hover:outline-teal-200 hover:outline focus-visible:outline" href={`${Astro.url.origin}/${page.slug}`}><Icon name={page.data.languageCode} /> <span class="sr-only">{versionText(translation.versionText, page.data.languageCode)}</span> </a>)}
				
			 	{pageData.file && <a class="bg-gray-100 no-underline flex items-center justify-center h-12 w-12 rounded-full outline-2 outline-offset-2 hover:outline-teal-200 hover:outline focus-visible:outline" href={`/${pageData.languageCode}/${pageData.file}`} data-astro-reload><Icon name="pdf" class="w-6 h-6" /><span class="sr-only">{translation.pdfLink}</span></a>}
				
				
				</div>
			 </div>
		 </div>
		
	 </main>
		
		
		<Footer />
		
	</body>
	
</html>
